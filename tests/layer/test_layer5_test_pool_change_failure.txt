=================================== FAILURES ===================================
___________ TestWebsocketRoute.test_pool_change[chromium-WsTornado] ____________

self = <tests.layer.test_layer_5.TestWebsocketRoute object at 0x10d4885e0>
page = <Page url='http://127.0.0.1:10055/'>
webserver = <wwwpy.webservers.tornado.WsTornado object at 0x10d488190>

        @for_all_webservers()
        def test_pool_change(self, page: Page, webserver: Webserver):
            # language=python
            python_code = """

    from js import document, WebSocket
    document.body.innerHTML = ''
    def log(msg):
        document.body.innerHTML += f'|{msg}'

    es = WebSocket.new(f'ws://127.0.0.1:$(webserver.port)/ws')

    def message(msg):
        log(f'message:{msg}')
        es.close()

    es.onopen = lambda e: log('open')
    es.onmessage = lambda e: message(e.data)
                    """

            python_code = python_code.replace('$(webserver.port)', str(webserver.port))
            webserver.set_http_route(*bootstrap_routes(resources=[library_resources()], python=python_code))

            changes = []

            ws_pool = WebsocketPool('/ws')
            ws_pool.on_before_change.append(lambda event: changes.append(event.change))
            webserver.set_http_route(ws_pool.http_route).start_listen()

            page.goto(webserver.localhost_url())

            expect(page.locator('body')).to_have_text('|open')
            assert changes == [Change.add]
            [sleep(0.1) for _ in range(100) if len(ws_pool.clients) == 0]
            assert len(ws_pool.clients) == 1
            client = ws_pool.clients[0]
            client.send('close')
            expect(page.locator('body')).to_have_text('|open|message:close')
>           assert changes == [Change.add, Change.remove]
E           AssertionError: assert [<Change.add: 'add'>] == [<Change.add:...ve: 'remove'>]
E
E             Right contains one more item: <Change.remove: 'remove'>
E
E             Full diff:
E               [
E                   <Change.add: 'add'>,
E             -     <Change.remove: 'remove'>,
E               ]

changes    = [<Change.add: 'add'>, <Change.remove: 'remove'>]
client     = <wwwpy.websocket.WebsocketEndpointIO object at 0x10dbe6970>
page       = <Page url='http://127.0.0.1:10055/'>
python_code = "\n\nfrom js import document, WebSocket\ndocument.body.innerHTML = ''\ndef log(msg):\n    document.body.innerHTML += f...s.close()\n    \nes.onopen = lambda e: log('open')\nes.onmessage = lambda e: message(e.data)        \n                "
self       = <tests.layer.test_layer_5.TestWebsocketRoute object at 0x10d4885e0>
webserver  = <wwwpy.webservers.tornado.WsTornado object at 0x10d488190>
ws_pool    = <wwwpy.websocket.WebsocketPool object at 0x10ddd3a90>

tests/layer/test_layer_5.py:116: AssertionError
----------------------------- Captured stdout call -----------------------------
Starting web server on:
 - http://0.0.0.0:10055
 - http://127.0.0.1:10055
 - http://192.168.64.23:10055

2024-10-25 15:31:43,972 W tornado.access:2348 - 404 GET /check_if_webserver_is_accepting_requests (127.0.0.1) 1.84ms
console [log] ==== loading pyodide...
console [log] ==== loading pyodide.runPythonAsync(...). See in the following lines for the code
console [log] ==== -----------------------  START PYTHON CODE  -------------------------------
console [log] ====
import sys
from pyodide.http import pyfetch
response = await pyfetch('/wwwpy/bundle.zip')
await response.unpack_archive(extract_dir='/wwwpy_bundle')
sys.path.insert(0, '/wwwpy_bundle')



from js import document, WebSocket
document.body.innerHTML = ''
def log(msg):
    document.body.innerHTML += f'|{msg}'

es = WebSocket.new(f'ws://127.0.0.1:10055/ws')

def message(msg):
    log(f'message:{msg}')
    es.close()

es.onopen = lambda e: log('open')
es.onmessage = lambda e: message(e.data)


console [log] ==== -----------------------  END PYTHON CODE    -------------------------------
------------------------------ Captured log call -------------------------------
WARNING  tornado.access:web.py:2348 404 GET /check_if_webserver_is_accepting_requests (127.0.0.1) 1.84ms